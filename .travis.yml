language: c++

# options common to all linux builds (ignored by osx)
dist: trusty
sudo: required
    
matrix:
  include:
    ####################################
    #           Debug builds           #
    ####################################
    # ------------ Linux ------------- #
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Debug CXX_EVAL="g++-5" CC_EVAL="gcc-5"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-5
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Debug CXX_EVAL="g++-6" CC_EVAL="gcc-6"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-6
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Debug CXX_EVAL="g++-7" CC_EVAL="gcc-7"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-7
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug CXX_EVAL="clang++-3.8" CC_EVAL="clang-3.8"
      addons:
        apt:
          sources: [ llvm-toolchain-precise-3.9, ubuntu-toolchain-r-test ]
          packages: [ clang-3.8, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug CXX_EVAL="clang++-3.9" CC_EVAL="clang-3.9"
      addons:
        apt:
          sources: [ llvm-toolchain-precise-3.9, ubuntu-toolchain-r-test ]
          packages: [ clang-3.9, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug CXX_EVAL="clang++-4.0" CC_EVAL="clang-4.0"
      addons:
        apt:
          sources: [ llvm-toolchain-trusty-4.0, ubuntu-toolchain-r-test ]
          packages: [ clang-4.0, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug CXX_EVAL="clang++-5.0" CC_EVAL="clang-5.0"
      addons:
        apt:
          sources: [ llvm-toolchain-trusty-5.0, ubuntu-toolchain-r-test ]
          packages: [ clang-5.0, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug CXX_EVAL="clang++-6.0" CC_EVAL="clang-6.0"
      addons:
        apt:
          sources: [ llvm-toolchain-trusty-6.0, ubuntu-toolchain-r-test ]
          packages: [ clang-6.0, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug CXX_EVAL="clang++-7" CC_EVAL="clang-7"
      addons:
        apt:
          sources: [ llvm-toolchain-trusty, ubuntu-toolchain-r-test ]
          packages: [ clang-7, g++-5 ]
    # ------------- OS X ------------- #
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: BUILD_TYPE=Debug
    - os: osx
      osx_image: xcode9
      compiler: clang
      env: BUILD_TYPE=Debug
    - os: osx
      osx_image: xcode9.1
      compiler: clang
      env: BUILD_TYPE=Debug
    - os: osx
      osx_image: xcode9.2
      compiler: clang
      env: BUILD_TYPE=Debug
    - os: osx
      osx_image: xcode9.3
      compiler: clang
      env: BUILD_TYPE=Debug
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env: BUILD_TYPE=Debug
    ####################################
    #          Release builds          #
    ####################################
    # ------------ Linux ------------- #
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Release CXX_EVAL="g++-5" CC_EVAL="gcc-5"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-5
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Release CXX_EVAL="g++-6" CC_EVAL="gcc-6"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-6
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Release CXX_EVAL="g++-7" CC_EVAL="gcc-7"
      addons:
        apt:
          sources: ubuntu-toolchain-r-test
          packages: g++-7
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release CXX_EVAL="clang++-3.8" CC_EVAL="clang-3.8"
      addons:
        apt:
          sources: [ llvm-toolchain-precise-3.9, ubuntu-toolchain-r-test ]
          packages: [ clang-3.8, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release CXX_EVAL="clang++-3.9" CC_EVAL="clang-3.9"
      addons:
        apt:
          sources: [ llvm-toolchain-precise-3.9, ubuntu-toolchain-r-test ]
          packages: [ clang-3.9, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release CXX_EVAL="clang++-4.0" CC_EVAL="clang-4.0"
      addons:
        apt:
          sources: [ llvm-toolchain-trusty-4.0, ubuntu-toolchain-r-test ]
          packages: [ clang-4.0, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release CXX_EVAL="clang++-5.0" CC_EVAL="clang-5.0"
      addons:
        apt:
          sources: [ llvm-toolchain-trusty-5.0, ubuntu-toolchain-r-test ]
          packages: [ clang-5.0, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release CXX_EVAL="clang++-6.0" CC_EVAL="clang-6.0"
      addons:
        apt:
          sources: [ llvm-toolchain-trusty-6.0, ubuntu-toolchain-r-test ]
          packages: [ clang-6.0, g++-5 ]
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release CXX_EVAL="clang++-7" CC_EVAL="clang-7"
      addons:
        apt:
          sources: [ llvm-toolchain-trusty, ubuntu-toolchain-r-test ]
          packages: [ clang-7, g++-5 ]
    # ------------- OS X ------------- #
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: BUILD_TYPE=Release
    - os: osx
      osx_image: xcode9
      compiler: clang
      env: BUILD_TYPE=Release
    - os: osx
      osx_image: xcode9.1
      compiler: clang
      env: BUILD_TYPE=Release
    - os: osx
      osx_image: xcode9.2
      compiler: clang
      env: BUILD_TYPE=Release
    - os: osx
      osx_image: xcode9.3
      compiler: clang
      env: BUILD_TYPE=Release
    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env: BUILD_TYPE=Release

before_install:
  - export CXX=$CXX_EVAL
  - export CC=$CC_EVAL
  - export CXXFLAGS="-Werror"

script:
  - mkdir build
  - cd build
  - cmake ../code -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - make -j2
  # limiting number of workers as suggested in https://docs.travis-ci.com/user/languages/cpp/#OpenMP-projects
  - NUM_WORKERS=3 make test ARGS="-j12 --output-on-failure"
